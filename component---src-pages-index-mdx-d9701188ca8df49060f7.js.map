{"version":3,"sources":["webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js","webpack:///./src/pages/index.mdx"],"names":["PageLayout","children","useConfig","site","siteMetadata","name","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","title","image","path","favTechs","_frontmatter","makeShortcode","props","console","warn","Message","Text","Divider","Button","Link","Grid","Box","Heading","Badge","SourceList","Flex","Card","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","mb","as","mr","href","role","gap","columns","map","favTech","index","key","sx","color","mix","length","borderColor","filter","projects","flexWrap","ml","theme","space","splice","edge","node","frontmatter","date","tags","slug","fields","maxWidth","width","textDecoration","p","fontSize","format","Date","tag","count","percent","justifyContent","posts","isMDXComponent"],"mappings":"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","file":"component---src-pages-index-mdx-d9701188ca8df49060f7.js","sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            // console.log('pathName: ', pathname)\n            const titleTemplate = pathname.replace(/\\//gm, '')\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/amorpheuz.github.io/amorpheuz.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { format } from 'date-fns';\nimport { mix } from '@theme-ui/color';\nimport Footer from '../components/footer';\nimport Socials from '../components/socials';\nexport const favTechs = ['React.js', 'Gatsby', 'JavaScript', '.NET Core', 'C#', 'Python', 'HTML5', 'CSS3', 'C', 'Java', 'SQL Server', 'MySQL'];\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Message = makeShortcode(\"Message\");\nconst Text = makeShortcode(\"Text\");\nconst Divider = makeShortcode(\"Divider\");\nconst Button = makeShortcode(\"Button\");\nconst Link = makeShortcode(\"Link\");\nconst Grid = makeShortcode(\"Grid\");\nconst Box = makeShortcode(\"Box\");\nconst Heading = makeShortcode(\"Heading\");\nconst Badge = makeShortcode(\"Badge\");\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst Card = makeShortcode(\"Card\");\nconst layoutProps = {\n  favTechs,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1>{`helloWorld`}</h1>\n    <Message variant='success' mb={2} mdxType=\"Message\">\n  <Text variant='styles.h4' mdxType=\"Text\">Hey Everyone, my name is Yash Dave!</Text>\n  I develop awesome WebApps based on React.js, Gatsby and Pure HTML+CSS+JS. I am also an upcoming Data Scientist currently pursuing Python Proficiency.\n  <Divider mdxType=\"Divider\" />\n  <Button as='a' mr={2} href='documents/YashDave.pdf' variant='primary' role='button' mdxType=\"Button\">Resume📄</Button>\n  <Link href='documents/YashDave.txt' role='button' mdxType=\"Link\">.txt version</Link>\n    </Message>\n    <Message variant='success' mb={2} mdxType=\"Message\">Dabbling into experimental cutting edge new technologies is my favorite pastime. I love motivating others to get into Open-Source! I am an occasional blogger.</Message>\n    <Divider mdxType=\"Divider\" />\n    <Grid gap={2} columns={[1, '1fr 2fr']} mdxType=\"Grid\">\n  <Box mdxType=\"Box\">\n    <Heading variant='styles.h2' mdxType=\"Heading\">getInTouch</Heading>\n    <Socials mdxType=\"Socials\" />\n  </Box>\n  <Box mdxType=\"Box\">\n    <Heading variant='styles.h2' mdxType=\"Heading\">favoriteTech</Heading>\n    {favTechs.map((favTech, index) => {\n          return <Badge key={index} variant='primary' sx={{\n            mr: 2,\n            mb: 2,\n            color: mix('secondary', 'success', `${index / favTechs.length}`),\n            borderColor: mix('secondary', 'success', `${index / favTechs.length}`)\n          }} mdxType=\"Badge\">\n            {favTech}\n          </Badge>;\n        })}\n  </Box>\n    </Grid>\n    <Divider mdxType=\"Divider\" />\n    <Heading variant='styles.h2' mdxType=\"Heading\">fetchProjects</Heading>\n    <SourceList filter='projects' mdxType=\"SourceList\">\n  {projects => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {projects.splice(0, 3).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%', '33.333%'],\n            width: ['100%', '50%', '33.333%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View project</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Flex sx={{\n      justifyContent: 'center'\n    }} mdxType=\"Flex\">\n  <Button as='a' mr={2} href='/projects' variant='primary' mdxType=\"Button\">Show me more!! 👨‍💻👩‍💻</Button>\n    </Flex>\n    <Divider mdxType=\"Divider\" />\n    <Heading variant='styles.h2' mdxType=\"Heading\">fetchRecentPosts</Heading>\n    <SourceList filter='posts' mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.splice(0, 4).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%'],\n            width: ['100%', '50%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View post</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Flex sx={{\n      justifyContent: 'center'\n    }} mdxType=\"Flex\">\n  <Button as='a' mr={2} href='/posts' variant='primary' mdxType=\"Button\">Read more 📑</Button>\n    </Flex>\n    <Divider mdxType=\"Divider\" />\n    <Footer mdxType=\"Footer\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}